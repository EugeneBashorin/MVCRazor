@model MVCRazor.Models.Product

@{
    ViewBag.Title = "DemoExpression";
    Layout = "~/Views/_BasicLayout.cshtml";
}

<table>
    <thead>
        <tr>
            <th>Property</th>
            <th>Value</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Name</td>
            <td>@Model.Name</td>
        </tr>
        <tr>
            <td>Price</td>
            <td>@Model.Price</td>
        </tr>
        <tr>
            <th>Stock Level</th>
            <td>
                @switch ((int)ViewBag.ProductCount)
                {
                    case 0:
                        @: Out of Stock
                        break;
                    case 1:
                        <b>Low Stock (@ViewBag.ProductCount)</b>
                        break;
                    default:
                        @ViewBag.ProductCount
                        break;
                }
                @*TheSame*@
                @if (ViewBag.ProductCount == 0)
                {
                    @:Out of Stock
                }
                else if (ViewBag.ProductCount == 1)
                {
                    <b>Low Stock (@ViewBag.ProductCount)</b>
                }
                else
                {
                    @ViewBag.ProductCount
                }
            </td>
            @*<th>@ViewBag.ProductCount</th>@ViewBag.ProductCount*@
        </tr>
    </tbody>
</table>

<div data-discount="@ViewBag.ApplyDiscount" data-express="@ViewBag.ExpressShip" data-suppllier="@ViewBag.Supplier">
    The containing elements has data attributes
</div>

Discount:<input type="checkbox" checked="@ViewBag.ApplyDiscount" />
Express:<input type="checkbox" checked="@ViewBag.ExpressShip" />
Supplier:<input type="checkbox" checked="@ViewBag.Supplier" />

@* public ActionResult DemoExpression()
    {
        ViewBag.ProductCount = 1;
        ViewBag.ExpressShip = true;
        ViewBag.ApplyDiscount = false;
        ViewBag.Supplier = null;
        return View(myProduct);
    }
*@